Option Compare Database

''warnings and logging

Private Sub Form_AfterInsert()
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim date_now As String
    Dim computername As String
    Dim UserName As String
    UserName = VBA.Environ("USERNAME")
    computername = VBA.Environ("COMPUTERNAME")
    date_now = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    Set Q = New ADODB.Recordset
    S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'NGS test: " + Me![ReferralID].Column(1) + " " + Me![NGSPanelID].Column(1) + " request added " + CStr(Me![DateRequested]) + "',#" + date_now + "#,'" + UserName + "','" + computername + "')"
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    If [Form_02 Patient Details]![s_StatusOverall] <> 1202218798 Then
        MsgBox "Updated patient status?", , "Don't be a dummy"
        End If
    
    If IsNull(Me!DNA) Then
        MsgBox "DNA number? This is required", , "Don't be a dummy"
        End If
        
End Sub

Private Sub Form_Delete(Cancel As Integer)
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim date_now As String
    Dim computername As String
    Dim UserName As String
    UserName = VBA.Environ("USERNAME")
    computername = VBA.Environ("COMPUTERNAME")
    date_now = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    Set Q = New ADODB.Recordset
    S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'NGS test: " + Me![ReferralID].Column(1) + " " + Me![NGSPanelID].Column(1) + " request deleted (requested " + CStr(Me![DateRequested]) + ")',#" + date_now + "#,'" + UserName + "','" + computername + "')"
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    If [Form_02 Patient Details]![s_StatusOverall] = 1202218798 Then
        MsgBox "Updated patient status?", , "Don't be a dummy"
        End If
    
End Sub

Private Sub NGSPanelID_AfterUpdate()
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim date_now As String
    Dim computername As String
    Dim UserName As String
    computername = VBA.Environ("COMPUTERNAME")
    UserName = VBA.Environ("USERNAME")
    date_now = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    Set Q = New ADODB.Recordset
    S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'NGS test: Panel changed to " + Me![NGSPanelID].Column(1) + "',#" + date_now + "#,'" + UserName + "','" + computername + "')"
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing

End Sub

''Refresh
Private Sub DNA_Enter()
    Me.DNA.Requery
End Sub

Private Sub ReferralID_DblClick(Cancel As Integer)
' Fail and NGSTest and create a new test with the same details. This function is activated by double-clicking the referall column in the NGSTest tab of
'    the patient details page.
Dim rsCopyNGSTest As ADODB.Recordset
Dim Sql As String
Dim date_now As String
Dim computername As String
Dim UserName As String
Dim NewTestID As String
Dim LogEntry As String

computername = VBA.Environ("COMPUTERNAME")
UserName = VBA.Environ("USERNAME")
date_now = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")

' Open prompt to confirm test is to be failed and new test created from copy of this testID
msgb = MsgBox("You are about to fail NGSest ID " & Me.NGSTestID & " and create a new test request based on this test." + vbNewLine + "Do you wish to continue?", vbYesNo, "Fail & copy test?")
If msgb = vbYes Then
' Create a new NGSTest record using fields from the failed test
'    build sql to create a copy of all the required fields
Sql = "INSERT INTO ngstest (internalpatientid, referralid, ngspanelid, ngspanelid_b, ngspanelid_c, statusid, daterequested, bookby, resultbuild, bookingauthoriseddate, bookingauthorisedbyid, service, costcentre, department, priority) " & _
      "SELECT internalpatientid, referralid, ngspanelid, ngspanelid_b, ngspanelid_c, 1202218803, daterequested, bookby, resultbuild, bookingauthoriseddate, bookingauthorisedbyid, service, costcentre, department, priority " & _
        "FROM ngstest " & _
       "WHERE ngstestid =" & Me.NGSTestID
' create new recordset - A recordset is used over DoCmd as we need to return the key of newly inserted row.
Set rsCopyNGSTest = New ADODB.Recordset
' run the sql to copy test
rsCopyNGSTest.Open Sql, CurrentProject.Connection
'Get ID of new entry
rsCopyNGSTest.Open "SELECT @@identity", CurrentProject.Connection, adOpenKeyset
NewTestID = rsCopyNGSTest.Fields(0).Value
Set rsCopyNGSTest = Nothing

' Build all SQL queries for procedures required to fail and copy NGS test:

'   Copy all ngstest files, adding a prefix to description to make it clear copied from prev test
copyNGSTestSQL = "INSERT INTO ngstestfile(ngstestid,description,ngstestfile,dateadded,vcf_filter_import) " & _
      "SELECT " & NewTestID & ",'copy_from_NGSTest'+'" & Me.NGSTestID & "'+'_'+description, ngstestfile, dateadded, vcf_filter_import " & _
        "FROM ngstestfile " & _
       "WHERE ngstestid = " & Me.NGSTestID

'   Copy panels in NGSTestPanelSelection
copyNGSTestPanelSQL = "INSERT INTO ngstestpanelselection(ngstestid, selectiontype, selectionid, analysisab) " & _
      "SELECT " & NewTestID & ", selectiontype, selectionid, analysisab " & _
        "FROM ngstestpanelselection " & _
       "WHERE ngstestid = " & Me.NGSTestID

'   Update patient log to say new test copied from a failed test
copyNGSTestLogEntry = "NGS: New test request (NGSTestID" & NewTestID & ") created from failed NGSTestID" & Me.NGSTestID & " (including testfiles)"
copyNGSTestPatientLogEntrySQL = "INSERT INTO patientlog(internalpatientid, logentry, [date], login, pcname) " & _
      "VALUES (" & CStr(Me![InternalPatientID]) & ",'" + copyNGSTestLogEntry + "',#" + date_now + "#,'" + UserName + "','" + computername + "')"

'   Update the NGSAnalysis for the failed test with the new test ID
updateNGSAnalysisSQL = "UPDATE NGSAnalysis Set NGSTestID = " & NewTestID & " WHERE NGSTestID = " & NGSTestID

'   Update patient log to say that NGS analysis ID has been updated
updateNGSAnalysisLogEntry = "NGS: New test request (NGSTestID" & NewTestID & ") created from failed NGSTestID" & Me.NGSTestID & " (including testfiles)"
updateNGSAnalysisLogEntrySQL = "INSERT INTO patientlog(internalpatientid, logentry, [date], login, pcname) " & _
      "VALUES (" & CStr(Me![InternalPatientID]) & ",'" + updateNGSAnalysisLogEntry + "',#" + date_now + "#,'" + UserName + "','" + computername + "')"

'  Deactivate failed test by settings NGSTest status to 'Test Failed' (1202218816)
failNGSTestSQL = "UPDATE ngstest " & _
         "SET statusid = 1202218816 " & _
       "WHERE NGSTestID = " & Me.NGSTestID

'  Update patient log to say test status set to failed
failNGSTestLogEntry = "NGS: Status changed to ""test failed"" for NGSTestID" & Me.NGSTestID
failNGSTestLogEntrySQL = "INSERT INTO patientlog(internalpatientid, logentry, [date], login, pcname) " & _
      "VALUES (" + CStr(Me![InternalPatientID]) + ",'" + failNGSTestLogEntry + "',#" + date_now + "#,'" + UserName + "','" + computername + "')"

' Run SQL commands
'   Turn off warnings so doesn't warn about appending rows
DoCmd.SetWarnings False
DoCmd.RunSQL copyNGSTestSQL
DoCmd.RunSQL copyNGSTestPanelSQL
DoCmd.RunSQL copyNGSTestPatientLogEntrySQL
DoCmd.RunSQL updateNGSAnalysisSQL
DoCmd.RunSQL updateNGSAnalysisLogEntrySQL
DoCmd.RunSQL failNGSTestSQL
DoCmd.RunSQL failNGSTestLogEntrySQL
DoCmd.SetWarnings True

' Refresh form to reflect changes applied above
Me.Requery

End If

End Sub


Private Sub StatusID_DblClick(Cancel As Integer)
Dim stDocName As String
Dim stLinkCriteria As String
stDocName = "0901 ExomeNGSResults"
    If Not IsNull(Me.[NGSTestID]) Then
        stLinkCriteria = "[NGSTestID]=" & Me![NGSTestID]
        DoCmd.OpenForm stDocName, , , stLinkCriteria
    End If
End Sub
