Option Compare Database

Private Sub chrID_38_BeforeUpdate(Cancel As Integer)
''When manually inporting a CNV from 100K want to record the NGStestID, internalpatientid and other required fields in the row
    
    If IsNull(Me.Probes) Then
        Me.Probes.Value = 0
        Me.NGStestID.Value = Me.Parent.NGStestID
        
    End If

        
End Sub

'''Opening forms

''previous findings
Private Sub ChrID19_DblClick(Cancel As Integer)
    Dim stDocName As String
    Dim stLinkCriteria As String
    stDocName = "s09_Previous"
    stLinkCriteria = "[ChrID19]=" & Me![ChrID19]
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria
End Sub


Private Sub Comment_DblClick(Cancel As Integer)
  DoCmd.RunCommand acCmdZoomBox
End Sub

'' The report prenatally field must be populated if class 4 or class 5
'' this function prevents a class 4 or 5 classification being entered when the report prenatally field is null
Private Sub Pathogenic_BeforeUpdate(Cancel As Integer)
    ' if pathogenic status is any of the class 4 or class 5 categories
    If Me![Pathogenic] = 1202218783 Or Me![Pathogenic] = 1202218788 Or Me![Pathogenic] = 1202218792 Or Me![Pathogenic] = 1202218791 Then
        ' if the report prenatally is also null
        If IsNull(Me.ReportPrenatally) Then
            ' show message box and cancel any changes
            MsgBox ("Please ensure causative/secondary finding is recorded if class 4 or 5")
            Cancel = True
        End If
    End If
End Sub

''alt previous findings
Private Sub Form_DblClick(Cancel As Integer)
    Dim stDocName As String
    Dim stLinkCriteria As String
    stDocName = "s09_Previous"
    stLinkCriteria = "[ChrID19]=" & Me![ChrID19]
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria
End Sub

'' Open variant assessment form
Private Sub Pathogenic_DblClick(Cancel As Integer)
    Dim stDocName As String
    Dim stLinkCriteria As String
    Dim stImbalanceID As String
    Dim stInsertImbalance As String
    Dim vafpresent As Long
    
    ' capture the oligoresultid
    stImbalanceID = Me![OligoResultID]
    
    ' set which form to be opened
    stDocName = "s09_ArrayVariantAssessment"
    ' join the subform with parent form using oligoresultid
    stLinkCriteria = "[OligoResultID]=" & Me![OligoResultID]
    'query to create new record in ArrayImbalanceVAF table
    stInsertImbalance = "insert into ArrayImbalanceVAF(OligoResultID,InternalPatientID) values (" & Me![OligoResultID] & "," & Me![InternalPatientID] & ")"
       
    ' count the number of times the oligoresultID is in the ArrayImbalanceVAF table.
    vafpresent = DCount("OligoResultID", "ArrayImbalanceVAF", "[OligoResultID]=" & Me![OligoResultID])
    
    'Debug.Print vafpresent
        
    'if the imbalance hasn't already got a record create one with internalpatientid and oligoresultid
    If vafpresent = 0 Then
        ' run insert query
        DoCmd.SetWarnings False
        DoCmd.RunSQL stInsertImbalance
        DoCmd.SetWarnings True
        ' open the form
        DoCmd.OpenForm stDocName, , , stLinkCriteria
    ElseIf vafpresent = 1 Then
        ''if variant is in the table open form
        DoCmd.OpenForm stDocName, , , stLinkCriteria
    Else
        ' if there is more than one record throw an error (the oligoresultid field is set to be unique so this shouldn't hapen)
        MsgBox ("Somehow there is more than one VAF for this imbalance")
    End If
End Sub

''dgv
Private Sub Start19_DblClick(Cancel As Integer)
    Dim url As String
    'url = "http://projects.tcag.ca/cgi-bin/variation/gbrowse/hg19/?start=" + CStr(Me.Start19 - 500000) + ";stop=" + CStr(Me.Stop19 + 50000) + ";ref=chr" + Me![ChrID19].Column(1) + ";h_region=chr" + Me![ChrID19].Column(1) + ":" + CStr(Me.Start19) + ".." + CStr(Me.Stop19) + ""
    'url = "http://dgv.tcag.ca/gb2/gbrowse/dgv2_hg19/?start=" + CStr(Me.Start19 - 500000) + ";stop=" + CStr(Me.Stop19 + 500000) + ";ref=chr" + Me![ChrID19].Column(1) + ""
    url = "https://dosage.clinicalgenome.org/region_search.cgi?loc=chr" + Me![ChrID19].Column(1) + ":" + CStr(Me.Start19) + "-" + CStr(Me.Stop19)
    'chromeurlserv url
    'url = "https://decipher.sanger.ac.uk/browser#q/" + Me![ChrID19].Column(1) + ":" + CStr(Me.Start19 - 500000) + "-" + CStr(Me.Stop19 + 500000) + "/location/" + Me![ChrID19].Column(1) + ":" + CStr(Me.Start19 - 500000) + "-" + CStr(Me.Stop19 + 500000)
    firefoxurl url
End Sub

Private Sub Start_DblClick(Cancel As Integer)
    Dim url As String
    url = "http://projects.tcag.ca/cgi-bin/variation/gbrowse/hg18/?start=" + CStr(Me.Start - 50000) + ";stop=" + CStr(Me.Stop + 50000) + ";ref=chr" + Me![ChrID].Column(1) + ";h_region=chr" + Me![ChrID].Column(1) + ":" + CStr(Me.Start) + ".." + CStr(Me.Stop) + ""
    'chromeurlserv url
    firefoxurl url
End Sub

''ucsc
Private Sub Stop19_DblClick(Cancel As Integer)
    Dim url As String
    url = "http://genome-euro.ucsc.edu/cgi-bin/hgTracks?hgS_doOtherUser=submit&hgS_otherUserName=devdisorders&hgS_otherUserSessionName=hg19cgh9&db=hg19&highlight=hg19.chr" + Me![ChrID19].Column(1) + "%3A" + CStr(Me.Start19) + "-" + CStr(Me.Stop19) + "&position=chr" + Me![ChrID19].Column(1) + "%3A" + CStr(Me.Start19 - 500000) + "-" + CStr(Me.Stop19 + 500000) + ""
    'url = "http://genome.ucsc.edu/cgi-bin/hgTracks?hgS_doOtherUser=submit&hgS_otherUserName=Wook&hgS_otherUserSessionName=hg19cgh8&highlight=hg19.chr" + Me![ChrID19].Column(1) + "%3A" + CStr(Me.Start19) + "-" + CStr(Me.Stop19) + "&position=chr" + Me![ChrID19].Column(1) + "%3A" + CStr(Me.Start19 - 500000) + "-" + CStr(Me.Stop19 + 500000) + ""
    'chromeurlserv url
    firefoxurl url
End Sub

Private Sub Stopend_DblClick(Cancel As Integer)
    Dim url As String
    url = "http://genome-euro.ucsc.edu/cgi-bin/hgTracks?db=hg18&highlight=hg18.chr" + Me![ChrID].Column(1) + "%3A" + CStr(Me.Start) + "-" + CStr(Me.Stop) + "&position=chr" + Me![ChrID].Column(1) + "%3A" + CStr(Me.Start - 500000) + "-" + CStr(Me.Stop + 500000) + ""
    'url = "http://genome.ucsc.edu/cgi-bin/hgTracks?hgS_doOtherUser=submit&hgS_otherUserName=Wook&hgS_otherUserSessionName=hg18CGH5&highlight=hg18.chr" + Me![ChrID].Column(1) + "%3A" + CStr(Me.Start) + "-" + CStr(Me.Stop) + "&position=chr" + Me![ChrID].Column(1) + "%3A" + CStr(Me.Start - 500000) + "-" + CStr(Me.Stop + 500000) + ""
    'chromeurlserv url
    firefoxurl url
End Sub


'''Data validation

''hyb id check
Private Sub Form_AfterUpdate()
    If IsNull(Me![DNALabellingID]) Then
        MsgBox "HybID?", , "Don't be a dummy"
        End If
End Sub


'''Auto-generate strings

''auto-ISCN generation

Private Sub DNALabellingID_DblClick(Cancel As Integer)

    'Declare variables
    Dim cxn As ADODB.Recordset
    Set cxn = New ADODB.Recordset
    Dim SQLquery As String
    Dim DNAID As String
    Dim IPID As String

    'Pull out id's
    DNAID = Me.Parent![s09_OligoPreliminaryResults]![DNALabellingID]
    IPID = Me.Parent![InternalPatientID]

    'Pull out copynumber
    Dim CopyNumber As String
    'Assign copy number
    If Not IsNull(Me![Copies].Column(1)) Then
        CopyNumber = Me![Copies].Column(1)
    Else: CopyNumber = " "
        End If

    'If this is a hyb partner, add comment to say imbalance confirmed in hyb partner
    If Me!CNVTypeID = 1190384919 Then

        Dim ResultCommentText As String
        Dim NewResultCommentText As String

        SQLquery = "SELECT ArrayResultComment FROM ArrayTest WHERE DNALabellingID = " + CStr(DNAID) + " AND InternalPatientID = " + IPID + ""
        cxn.Open SQLquery, CurrentProject.Connection, adOpenKeyset, adLockOptimistic, adCmdText

        If Not IsNull(cxn![ArrayResultComment]) Then
            ResultCommentText = cxn![ArrayResultComment]
            NewResultCommentText = "" + ResultCommentText + " " + vbNewLine + "Imbalance confirmed in hyb partner"
        Else
            NewResultCommentText = "Imbalance confirmed in hyb partner"
            End If

        cxn!ArrayResultComment = NewResultCommentText
        cxn.update
        Set cxn = Nothing

    'If this is the patient with a CNV, add ISNC to result field
    Else
        
        SQLquery = "SELECT ArrayResult FROM ArrayTest WHERE DNALabellingID = " + CStr(DNAID) + " AND InternalPatientID = " + IPID + ""
        cxn.Open SQLquery, CurrentProject.Connection, adOpenKeyset, adLockOptimistic, adCmdText

        Dim StartPos As String
        Dim StopPos As String

        StartPos = Me![Start19]
        StopPos = Me![Stop19]

        Dim ResultText As String
        Dim NewResultText As String

        If Not IsNull(cxn![ArrayResult]) Then
            ResultText = cxn![ArrayResult]
            NewResultText = "" + ResultText + "," + Me![Band19] + "(" + StartPos + "_" + StopPos + ")" + CopyNumber + ""
        Else
            NewResultText = "arr[GRCh37] " + Me![Band19] + "(" + StartPos + "_" + StopPos + ")" + CopyNumber + ""
            End If
    
        cxn![ArrayResult] = NewResultText
        cxn.update
        Set cxn = Nothing
        
        'logging
        Dim cxn2 As ADODB.Recordset
        Set cxn2 = New ADODB.Recordset
        Dim SQLlogquery As String
        Dim DateStamp As String
        Dim UserName As String
        Dim computername As String

        DateStamp = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
        UserName = VBA.Environ("USERNAME")
        computername = VBA.Environ("COMPUTERNAME")
    
        SQLlogquery = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result changed to " + NewResultText + " from HybID " + Me![DNALabellingID].Column(1) + "',#" + DateStamp + "#,'" + UserName + "','" + computername + "')"
        cxn2.Open SQLlogquery, CurrentProject.Connection
        Set cxn2 = Nothing
        
        End If
    
    'refresh GUI
    Me.Parent![s09_ArrayTest].Form.Requery

End Sub


'' auto add chromosome band to candidate abnormality field
Private Sub Band19_DblClick(Cancel As Integer)
    If Not IsNull(Me!Band19) Then
        Dim e As ADODB.Recordset
        Set e = New ADODB.Recordset
        Dim C As String
        Dim b As String
        Dim A As String
        Dim x As String
        Dim f As String
    
        x = Me.Parent![InternalPatientID]
        f = Me![Band19]
        
        C = "SELECT CandidateAbnormality FROM Patients WHERE InternalPatientID = " + x + ""
        e.Open C, CurrentProject.Connection, adOpenKeyset, adLockOptimistic, adCmdText
        If Not IsNull(e!CandidateAbnormality) Then
            A = e!CandidateAbnormality
            b = "" + A + ", " + f + ""
            Else
            b = f
            End If
        
        e!CandidateAbnormality = b
        e.update
        Set e = Nothing
    
        [Form_09 ArrayResultsByPostition].Requery
        End If
End Sub


''auto generate text for report
Private Sub Copies_DblClick(Cancel As Integer)
    If Not IsNull(Me.Copies) Then
        ''the output variable
        Dim sentance As String
        ''formating size as Mb
        Dim rou As String
        Dim Siz As String
        rou = Me!Size19 / 1000000
        Siz = FormatNumber(rou, 3, -1, 0, -1)
        ''set band field to variable
        Dim Band As String
        Band = Me!Band19
        ''how many bands
        Dim bands As Integer
        bands = Len(Band) - Len(Replace(Band, "p", "")) + Len(Band) - Len(Replace(Band, "q", ""))
        ''is it short arm or long arm
        Dim whicharm As String
        Dim pbands As Integer
        Dim qbands As Integer
        pbands = Len(Band) - Len(Replace(Band, "p", ""))
        qbands = Len(Band) - Len(Replace(Band, "q", ""))
        If pbands <> 0 And qbands = 0 Then
            whicharm = "the short arm of "
        ElseIf pbands = 0 And qbands <> 0 Then
            whicharm = "the long arm of "
            End If
        ''break out the bands
        Dim chrlen As Integer
        chrlen = Len(Me.ChrID19.Column(1))
        Dim band1 As String
        If bands = 1 Then
            band1 = Mid(CStr(Me.Band19), chrlen + 1)
        ElseIf bands = 2 Then
            Dim choppedband As String
            choppedband = Mid(Me.Band19, chrlen + 2)
            Dim secondbandp As Integer
            Dim secondbandq As Integer
            secondbandp = Len(choppedband) - Len(Replace(choppedband, "p", ""))
            secondbandq = Len(choppedband) - Len(Replace(choppedband, "q", ""))
            Dim secondbandstarts As Integer
            If secondbandp = 1 Then
                secondbandstarts = InStr(choppedband, "p")
            ElseIf secondbandq = 1 Then
                secondbandstarts = InStr(choppedband, "q")
                End If
            Dim lesschoppedband As String
            lesschoppedband = Mid(Me.Band19, chrlen + 1, 10)
            band1 = Mid(CStr(lesschoppedband), 1, secondbandstarts)
            Dim band2 As String
            band2 = Mid(CStr(choppedband), secondbandstarts)
            End If
        ''which chromosome is it
        Dim whichchr As String
        If Me!ChrID19 = 47 Then
            whichchr = "the X chromosome"
        ElseIf Me!ChrID19 = 48 Then
            whichchr = "the Y chromosome"
        ElseIf Me!ChrID19 > 24 And Me!ChrID19 < 47 Then
            whichchr = "chromosome " + Me!ChrID19.Column(1)
            End If
        ''format coordinates
        Dim starting As String
        starting = CStr(Format(Me.Start19, "###,###,###"))
        Dim stopping As String
        stopping = CStr(Format(Me.Stop19, "###,###,###"))
        ''form sentance for dels and dups
        If Me.Copies = 1190384936 Then
            sentance = "This test identified a deletion of approximately " + Siz + "Mb from "
            If bands = 1 Then
                sentance = sentance + "band " + band1 + " in " + whicharm + whichchr + ", between base pair coordinates " + starting + " and " + stopping + "."
            ElseIf bands = 2 Then
                sentance = sentance + "bands " + band1 + " to " + band2 + " in " + whicharm + whichchr + ", between base pair coordinates " + starting + " and " + stopping + "."
                End If
        ElseIf Me.Copies = 1190384940 Then
            sentance = "This test identified a duplication of approximately " + Siz + "Mb of material originating from " + whicharm + whichchr + ";"
            If bands = 1 Then
                sentance = sentance + " the duplicated region is from band " + band1 + ", between base pair coordinates " + starting + " and " + stopping + "."
            ElseIf bands = 2 Then
                sentance = sentance + " the duplicated region is from bands " + band1 + " to " + band2 + ", between base pair coordinates " + starting + " and " + stopping + "."
                End If
            End If
        ''copy to clipboard
        ClipBoard_SetData (sentance)
        MsgBox "Following text copied, paste (CTRL + V) into report: " + sentance, , "Don't be a dummy"
    
        End If
        
End Sub


''' logging

''log change to pathogenic
Private Sub Pathogenic_Change()
    If Not IsNull(Me!Pathogenic) Then
        Dim Q As ADODB.Recordset
        Set Q = New ADODB.Recordset
        Dim e As ADODB.Recordset
        Set e = New ADODB.Recordset
        'Dim r As String
        Dim C As String
        Dim S As String
        Dim b As String
        'Dim t As String
        Dim A As String
        'Dim Sta As String
        'Dim Sto As String
        Dim rou As String
        Dim Siz As String
        Dim U As ADODB.Recordset
        Set U = New ADODB.Recordset
        Dim v As String
        Dim d As String
        Dim dd As String
        Dim un As String
        Dim cn As String
        d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
        dd = Format(Now, "dd/mm/yyyy")
        un = VBA.Environ("USERNAME")
        cn = VBA.Environ("COMPUTERNAME")
        Dim W As String
        Dim x As String
        Dim f As String
        Dim g As String
            
        W = Me.Parent![s09_OligoPreliminaryResults]![DNALabellingID]
        x = Me.Parent![InternalPatientID]
        If Not IsNull(Me![Copies].Column(1)) Then
            f = Me![Copies].Column(1)
            Else: f = " "
            End If
        g = CStr(Me!Probes)
        If Not IsNull(Me![Pathogenic].Column(1)) Then
            h = Me![Pathogenic].Column(1)
            Else: h = " "
            End If
                
        C = "SELECT ArrayResultComment FROM ArrayTest WHERE DNALabellingID = " + CStr(W) + " AND InternalPatientID = " + x + ""
        e.Open C, CurrentProject.Connection, adOpenKeyset, adLockOptimistic, adCmdText
        rou = Me!Size19 / 1000000
        Siz = FormatNumber(rou, 3, -1, 0, -1)
        If Not IsNull(e!ArrayResultComment) Then
            A = e!ArrayResultComment
            b = "" + A + vbNewLine + un + " (" + dd + "): " + Me![Band19] + " " + f + " - " + Siz + "Mb, " + g + " probes, classified in Moka as " + h + ""
        Else: b = "" + un + " (" + dd + "): " + Me![Band19] + " " + f + " - " + Siz + "Mb, " + g + " probes, classified in Moka as " + h + ""
            End If
        
        e!ArrayResultComment = b
        e.update
        Set e = Nothing
    
        v = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: " + Me![Band19] + " " + f + " classified as " + h + " from HybID " + Me![DNALabellingID].Column(1) + "',#" + d + "#,'" + un + "','" + cn + "')"
        U.Open v, CurrentProject.Connection
        Set U = Nothing
    
        Me.Parent![s09_ArrayTest].Form.Requery
    
        If IsNull(Me.Parent![s09_ArrayTest]![ArrayResultComment]) Then
            S = "INSERT INTO PatientLogMemo(InternalPatientID, ArrayTestID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + "," + CStr(Me.Parent![s09_ArrayTest]![ArrayTestID]) + ",'Array test: Result comment deleted for test requested " + CStr(Me.Parent![s09_ArrayTest]![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLogMemo(InternalPatientID, ArrayTestID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + "," + CStr(Me.Parent![s09_ArrayTest]![ArrayTestID]) + ",'Array test: Result comment updated for array test requested " + CStr(Me.Parent![s09_ArrayTest]![RequestedDate]) + " - " + Me.Parent![s09_ArrayTest]![ArrayResultComment] + "',#" + d + "#,'" + un + "','" + cn + "')"
            End If
        
        Q.Open S, CurrentProject.Connection
        Set Q = Nothing
    
        End If
End Sub

