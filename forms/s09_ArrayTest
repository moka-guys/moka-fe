Option Compare Database

'Form refresh sometimes required following a beforeupdate Cancel event (see StatusID_BeforeUpdate below)
'This refresh has to occur after the BeforeUpdate event (i.e. not during), e.g. on lose focus event
'However the refresh takes time so only want to do it if necessary, hence this boolean
Private requires_refresh As Boolean

Private Sub Form_Open(Cancel As Integer)
    requires_refresh = False
End Sub

''logging

Private Sub StatusID_AfterUpdate()
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Status updated to " + Me![StatusID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Q.Open S, CurrentProject.Connection
        Set Q = Nothing
    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
End Sub


Private Sub DNALabellingID_AfterUpdate()
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([DNALabellingID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: HybID deleted for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    Else
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: HybID " + Me![DNALabellingID].Column(1) + " assigned to test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
End Sub

Private Sub ArrayResultCodeID_AfterUpdate()
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([ArrayResultCodeID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Rresult code deleted for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    Else
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result code changed to " + Me![ArrayResultCodeID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
End Sub

Private Sub ArrayResult_AfterUpdate()
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([ArrayResult]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result deleted for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    Else
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result changed to " + Me![ArrayResult] + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    If IsNull(Me.ArrayResultBuild) Then
        MsgBox "Genome build?", , "Don't be a dummy"
        End If
End Sub

Private Sub ArrayResultComment_AfterUpdate()
    Dim Q As ADODB.Recordset
    Dim R As ADODB.Recordset
    Dim S As String
    Dim t As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([ArrayResultComment]) Then
        S = "INSERT INTO PatientLogMemo(InternalPatientID, ArrayTestID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + "," + CStr(Me![ArrayTestID]) + ",'Array test: Result comment deleted for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    Else
        Dim RC As String
        RC = Replace(Me![ArrayResultComment], "'", "''")
        S = "INSERT INTO PatientLogMemo(InternalPatientID, ArrayTestID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + "," + CStr(Me![ArrayTestID]) + ",'Array test: Result comment updated for array test requested " + CStr(Me![RequestedDate]) + " - " + RC + "',#" + d + "#,'" + un + "','" + cn + "')"
    End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing

    Set R = New ADODB.Recordset
    If IsNull([ArrayResultComment]) Then
        t = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result comment deleted for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    Else
        t = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result comment updated for array test requested " + CStr(Me![RequestedDate]) + " - see memo log',#" + d + "#,'" + un + "','" + cn + "')"
    End If
    R.Open t, CurrentProject.Connection
    Set R = Nothing

End Sub

Private Sub Check0ID_AfterUpdate()
    'This records initials of analysts that have entered data manually (usually CNVs are entered via a script)
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([Check0ID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Data entry initials removed for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Data entry signed off by " + Me![Check0ID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
    
    'Update date fields whenever something changes
    Check0Date = Now()
    ArrayResultDate = Now()
    Me.ArrayResultDate.Requery
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey

End Sub

Private Sub Check05ID_AfterUpdate()
    'This records initials of someone checking manual data entry (usually CNVs are entered via a script)
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([Check05ID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Data checking initials removed for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Data checking signed off by " + Me![Check05ID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
    
    'Update date fields whenever something changes
    Check05Date = Now()
    ArrayResultDate = Now()
    Me.ArrayResultDate.Requery
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey

End Sub

Private Sub Check1ID_AfterUpdate()
    'This records initials of the analyst
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([Check1ID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Initials for analysis removed for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Analysis entered by " + Me![Check1ID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
    
    'Update date fields whenever something changes
    Check1Date = Now()
    ArrayResultDate = Now()
    Me.ArrayResultDate.Requery
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey

End Sub

Private Sub Check2ID_AfterUpdate()
    'This records initials of the checker
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([Check2ID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Initials for checking removed, for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result checked by " + Me![Check2ID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing

    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
    
    'Update date fields whenever something changes
    Check2Date = Now()
    ArrayResultDate = Now()
    Me.ArrayResultDate.Requery
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey

End Sub

Private Sub Check3ID_AfterUpdate()
    'This records initials of the person who wrote the report
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([Check3ID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Initials for writing report removed, for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Report written by " + Me![Check3ID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
    
    'Update date fields whenever something changes
    Check3Date = Now()
    ArrayResultDate = Now()
    Me.ArrayResultDate.Requery
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey

End Sub

Private Sub Check4ID_AfterUpdate()
    'This records initials of the authoriser
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([Check3ID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Initials for authorising removed for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result authorised by " + Me![Check3ID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
    
    'Update date fields whenever something changes
    Check4Date = Now()
    ArrayResultDate = Now()
    Me.ArrayResultDate.Requery
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey

End Sub

Private Sub Check5ID_AfterUpdate()
    'This records initials of the 2nd authoriser
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([Check3ID]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Initials for 2nd authoriser removed for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        Else
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result 2nd authorised by " + Me![Check3ID].Column(1) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
        End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    
    'Save changes (the quick way - by switching focus to a different subform, much faster than doing a refresh or requery)
    Forms![09 ArrayResultsByPostition]![s_StatusOverall].SetFocus
    
    'Update date fields whenever something changes
    Check5Date = Now()
    ArrayResultDate = Now()
    Me.ArrayResultDate.Requery
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey

End Sub

Private Sub ArrayResultDate_AfterUpdate()
    Dim Q As ADODB.Recordset
    Dim S As String
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    Set Q = New ADODB.Recordset
    If IsNull([ArrayResultDate]) Then
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result updated date removed for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    Else
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Array test: Result date updated to " + CStr(Me![ArrayResultDate]) + " for test requested " + CStr(Me![RequestedDate]) + "',#" + d + "#,'" + un + "','" + cn + "')"
    End If
    Q.Open S, CurrentProject.Connection
    Set Q = Nothing
    Dim cred As Long
    Dim cgrey As Long
    cred = RGB(255, 0, 0)
    cgrey = RGB(192, 192, 192)
    Me.Label35.BackColor = cred
    Dim PauseTime, Start
    PauseTime = 1
    Start = Timer
    Do While Timer < Start + PauseTime
         DoEvents
    Loop
    Me.Label35.BackColor = cgrey
End Sub

''autodate

Private Sub ArrayResultDate_DblClick(Cancel As Integer)
    If (Not IsNull([Check1ID]) And Not IsNull([Check2ID])) Then
 
    Else
        [ArrayResultDate] = Now()
    End If
End Sub

''open forms

Private Sub open_s09_HybPartners_Click()
On Error GoTo Err_open_s09_HybPartners_Click
    
    Dim stDocName As String
    Dim stLinkCriteria As String
    stDocName = "s09_HybsAndPartners"
    stLinkCriteria = "[InternalPatientID]=" & Me![InternalPatientID]
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria
    
Exit_open_s09_HybPartners_Click:
    Exit Sub
Err_open_s09_HybPartners_Click:
    MsgBox Err.Description
    Resume Exit_open_s09_HybPartners_Click
End Sub

Private Sub Command71_Click()
On Error GoTo Err_Command71_Click

    Dim stDocName As String
    stDocName = "s09_Candidate"
    DoCmd.OpenForm stDocName, acFormDS

Exit_Command71_Click:
    Exit Sub

Err_Command71_Click:
    MsgBox Err.Description
    Resume Exit_Command71_Click
    
End Sub

Private Sub ArrayResultComment_DblClick(Cancel As Integer)
    Dim stDocName As String
    stDocName = "s09_PatientLogMemo"
    stLinkCriteria = "[ArrayTestID]=" & Me![ArrayTestID]
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria
End Sub


Private Sub SendReport_Click()
''submit for reporting
Dim rsUSR As DAO.Recordset
Dim rsORG As DAO.Recordset
Dim usr As String
Dim cmp As String
Dim dt As String
Dim InsertQuery1 As String
Dim UpdateQuery1 As String
Dim PRU As String
Dim ATI As String

'get user and referring organisation
usr = VBA.Environ("USERNAME")
cmp = VBA.Environ("COMPUTERNAME")
ATI = Me.ArrayTestID
strUSRSQL = "SELECT Checker.Check1ID, Checker.Name, Checker.Authoriser FROM Checker WHERE Checker.Username = '" + usr + "'"
strORG = "SELECT [v_arraytestid-referral-org].ReferralOrganisation, [v_arraytestid-referral-org].Department FROM [v_arraytestid-referral-org] WHERE [v_arraytestid-referral-org].ArrayTestID = " + ATI + ""
Set db = CurrentDb
Set rsUSR = db.OpenRecordset(strUSRSQL, dbOpenDynaset, dbSeeChanges)
Set rsORG = db.OpenRecordset(strORG, dbOpenDynaset, dbSeeChanges)

'This function will call a python script that populates an email for sending 100k negative results
Dim email_body As String
Dim wsh As Object
Dim pythonPath As String
Dim scriptPath As String
Dim wshexec As Object
Dim stdout As String
Dim script_command As String
Dim TestType As String

'Check user wants to send email
If vbYes = MsgBox("Generate reporting email for this case?", vbYesNo + vbQuestion, "Continue?") Then
    'If user is not in checker table as authoriser = 5 (array authoriser) or 1 (binfx admin) then say no
    If (rsUSR!authoriser <> 5 And rsUSR!authoriser <> 1 Or IsNull(rsUSR!authoriser)) Then
        MsgBox "Your account is not allowed to send out reports.", vbOKOnly + vbExclamation, "ATTENTION"
    End If
    'If user is in checker table as authoriser = 5 (array authoriser) or 1 (binfx admin) then go
    If (rsUSR!authoriser = 5 Or rsUSR!authoriser = 1) Then
        'Patient log
        dt = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
        InsertQuery1 = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Report email generated for specimen " + Me!SpecimenNo + "',#" + dt + "#,'" + usr + "','" + cmp + "')"
        DoCmd.SetWarnings False
        DoCmd.RunSQL InsertQuery1
        'record who sent report email
        UpdateQuery1 = "UPDATE ArrayTest SET ReportDate = '" & dt & "' WHERE ArrayTest.ArrayTestID = " & CStr(Me!ArrayTestID)
        DoCmd.RunSQL UpdateQuery1
        DoCmd.SetWarnings True
        Me.Requery
        'Create the email message body
        PRU = CStr(Me![PatientID])
        If Me.Priority = True Then
            TestType = "URGENT " & Me.Referral
        Else
            TestType = Me.Referral
        End If
        email_body = "<body style=\""font-family:Calibri,sans-serif;\"">" & _
        "Please send out the authorised array report for:<br><br>" & _
        "PRU: <b>" & PRU & "</b><br>" & _
        "Name: <b>" & Me.CaseName & "</b><br>" & _
        "Specimen: <b>" & Me.SpecimenNo & "</b><br>" & _
        "Array test type: " & TestType & "<br>" & _
        "Referring Org: " & rsORG!ReferralOrganisation & "<br>" & _
        "Referring Dept: " & rsORG!Department & "<br>" & _
        "</body>"
        'Run the script to send the email
        Set wsh = CreateObject("WScript.Shell")
        ' set path to the python executable
        pythonPath = "\\gstt.local\Shared\Genetics_Data2\Array\Software\Python\python.exe"
        ' set path to the script which will import the variants
        scriptPath = "\\gstt.local\Apps\Moka\Files\Software\100K\generate_email.py"
        ' Build command
        script_command = "cmd.exe /S /C " & pythonPath & " " & scriptPath
        script_command = script_command & " --to ViapathGeneticsOffice@gstt.nhs.uk "
        If Me.Priority = True Then
            script_command = script_command & " --subject ""URGENT authorised array report " & PRU & " to send"""
        Else
            script_command = script_command & " --subject ""Authorised array report " & PRU & " to send"""
        End If
        script_command = script_command & " --body """ & email_body & """"
        ' Redirect stderr to stdout
        script_command = script_command & " 2>&1"
        ' Run script.
        'Debug.Print script_command
        Set wshexec = wsh.Exec(script_command)
        'DoEvents pauses VBA until python script has finished running. wshexec.status is 0 while running and 1 when finished
        Do While wshexec.Status = 0
            DoEvents
        Loop
        'Capture any messages from python script (stdout is redirected to stderr in command)
        stdout = wshexec.stdout.readall()
        ' Report any standard error in msgbox
        If stdout <> "" Then
            MsgBox stdout
        End If
    End If
    rsUSR.Close
    Set rsUSR = Nothing    'Deassign all objects.
    Set db = Nothing
End If

End Sub


''auto karyotype
Private Sub ArrayResult_DblClick(Cancel As Integer)

    Dim Q As ADODB.Recordset
    Set Q = New ADODB.Recordset
    Dim R As String
    Dim S As String
    Dim t As String
    Dim U As ADODB.Recordset
    Set U = New ADODB.Recordset
    Dim v As String
    Dim x As String
    Dim Y As String
    x = Me.InternalPatientID
    Y = Me.ArrayResult
    Dim d As String
    Dim un As String
    Dim cn As String
    d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")

    R = "SELECT OverallResultComments FROM Patients WHERE InternalPatientID = " + x + ""
    Q.Open R, CurrentProject.Connection, adOpenKeyset, adLockOptimistic, adCmdText
    If Not IsNull(Q!OverallResultComments) Then
        t = Q!OverallResultComments
        S = "" + t + "," + Y + ""
    Else: S = "" + Y + ""
    End If

    Q!OverallResultComments = S
    Q.update
    Set Q = Nothing

    v = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Patient: Result changed to [" + S + "]',#" + d + "#,'" + un + "','" + cn + "')"
    U.Open v, CurrentProject.Connection
    Set U = Nothing

    Me.Parent.Form.Requery
    
End Sub


''show results sheet
Private Sub Command73_Click()
    If IsNull(Me!SpecimenNo) Then
        MsgBox "Specimen number needs to be assigned", , "Don't be a dummy"
    ElseIf IsNull(Me!Check2ID) Then
        MsgBox "No intials have been entered for checking", , "Don't be a dummy"
    Else
        Dim d As String
        Dim un As String
        Dim cn As String
        Dim S As String
        d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
        un = VBA.Environ("USERNAME")
        cn = VBA.Environ("COMPUTERNAME")
        S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Moka result sheet generated for specimen " + Me!SpecimenNo + "',#" + d + "#,'" + un + "','" + cn + "')"
        DoCmd.SetWarnings False
        DoCmd.RunSQL S
        DoCmd.SetWarnings True
        
        DoCmd.DoMenuItem acFormBar, acRecordsMenu, 5, , acMenuVer70

        Dim stDocName As String
        Dim stLinkCriteria As String
        stDocName = "FamilyResults_Auto_R"
        stLinkCriteria = "[SpecimenNo]=" & "'" & Me![SpecimenNo] & "'"
        DoCmd.OpenReport stDocName, acViewPreview, , stLinkCriteria
    End If
End Sub

''print results sheet
Private Sub Command79_Click()
    Dim date_now As String
    Dim time_now As String
    Dim run_year As String
    Dim run_number As String
    Dim month_now As String
    Dim base_directory As String
    Dim filename As String
    Dim filepath As String
    If IsNull(Me!SpecimenNo) Then
        MsgBox "Specimen number needs to be assigned", , "Don't be a dummy"
    ElseIf IsNull(Me!Check2ID) Then
        MsgBox "No intials have been entered for checking", , "Don't be a dummy"
    Else
        Dim d As String
        Dim un As String
        Dim cn As String
        Dim S As String
        d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
        un = VBA.Environ("USERNAME")
        cn = VBA.Environ("COMPUTERNAME")
                    
        date_now = Format(Now, "yymmdd")
        time_now = Format(Now, "hhmmss")
        'Use Split to extract run number from inside the parentheses in the Hyb ID field on form.
        run_number = Split(Split(Me.DNALabellingID.Column(1), "(")(1), ")")(0)
        'Run year
        run_year = 20 & Left(run_number, 2)
        run_folder = "\\gstt.local\apps\Moka\Files\Analysis\" & run_year & "\" & run_number & "\"
        'Include timestamp in filename so that filename is unique (to prevent file being overwritten if results sheet is re-generated on same day)
        filename = "ArrayResultsSheet_PRU" & Replace(Me.PatientID, ":", "") & "_" & date_now & "_" & time_now & ".pdf"
        'File will be saved in the run folder for this run
        filepath = run_folder & "\" & filename
        'Check the run folder actually exists and if it doesn't display error message and exit
        If Len(Dir(run_folder, vbDirectory)) = 0 Then
            MsgBox "Expected run folder for saving results sheet not found: " & run_folder, vbExclamation, "Error"
        Else
            'Force save before generating results sheet
            DoCmd.DoMenuItem acFormBar, acRecordsMenu, 5, , acMenuVer70

            'Open report
            Dim stDocName As String
            Dim stLinkCriteria As String
            stDocName = "FamilyResults_Auto_R2"
            'Save results sheet as PDF
            DoCmd.OutputTo acOutputReport, stDocName, acFormatPDF, filepath

            'Add to ArrayTestFiles and update patient log
            sqlTestFile = "INSERT INTO ArrayTestFile (ArrayTestID, Description, [Date], ArrayTestFilepath) VALUES (" & Me.ArrayTestID & ", 'Result Sheet', #" & d & "#, '" & filepath & "')"
            sqlPatLog = "INSERT INTO PatientLog (InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Moka result sheet generated for specimen " + Me!SpecimenNo + "',#" + d + "#,'" + un + "','" + cn + "')"
            Debug.Print sqlTestFile
            Debug.Print sqlPatLog

            DoCmd.SetWarnings False
            DoCmd.RunSQL sqlTestFile
            DoCmd.RunSQL sqlPatLog
            DoCmd.SetWarnings True

            'Refresh form so test file appears in list
            Me.refresh
        End If
    End If
End Sub


''print test sheet
Private Sub Command80_Click()
On Error GoTo Err_Command80_Click

    Dim stDocName As String
    Dim stLinkCriteria As String

    stDocName = "ArrayTestSheet"
    stLinkCriteria = "[ArrayTestID]=" & Me![ArrayTestID]
    'DoCmd.OpenReport stDocName, acViewPreview, , stLinkCriteria
    DoCmd.OpenReport stDocName, acNormal, , stLinkCriteria


Exit_Command80_Click:
    Exit Sub

Err_Command80_Click:
    MsgBox Err.Description
    Resume Exit_Command80_Click
    
End Sub

''print PGD result sheet
Private Sub Command83_Click()
    If IsNull(Me!Check1ID) Then
        MsgBox "No intials have been entered by analyst", , "Don't be a dummy"
        ElseIf IsNull(Me!Check2ID) Then
            MsgBox "No intials have been entered by checker", , "Don't be a dummy"
        Else
            Dim d As String
            Dim un As String
            Dim cn As String
            Dim S As String
            d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
            un = VBA.Environ("USERNAME")
            cn = VBA.Environ("COMPUTERNAME")
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Moka PGD result sheet generated for PGD case entered under PatientID " + CStr(Me!FamilyTrustID) + "',#" + d + "#,'" + un + "','" + cn + "')"
            DoCmd.SetWarnings False
            DoCmd.RunSQL S
            DoCmd.SetWarnings True
            ' I think this next bit just refreshes the form. It depends what option 5 was on the previous list of command argument list, as shown in the Macro window in previous versions of Microsoft Access (count down the list, starting from 0).  taken from https://msdn.microsoft.com/en-us/vba/access-vba/articles/docmd-domenuitem-method-access and http://access.mvps.org/access/RunCommand/domenuitem.htm
            ' Maybe this this work (UNTESTED!)
            'DoCmd.RunCommand acCmdRefresh
            DoCmd.DoMenuItem acFormBar, acRecordsMenu, 5, , acMenuVer70
    
            Dim stDocName As String
            Dim stLinkCriteria As String
            stDocName = "FamilyResults_Auto_PGD"
            stLinkCriteria = "[SpecimenNo]=" & "'" & Me![SpecimenNo] & "'"
            DoCmd.OpenReport stDocName, acViewPreview, , stLinkCriteria
            
        End If
End Sub

''print PGD test report
Private Sub Command96_Click()
    If IsNull(Me!Check1ID) Then
        MsgBox "No intials have been entered by analyst", , "Don't be a dummy"
        ElseIf IsNull(Me!Check2ID) Then
            MsgBox "No intials have been entered by checker", , "Don't be a dummy"
        Else
            Dim d As String
            Dim un As String
            Dim cn As String
            Dim S As String
            d = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
            un = VBA.Environ("USERNAME")
            cn = VBA.Environ("COMPUTERNAME")
            S = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me![InternalPatientID]) + ",'Moka PGD report generated for PGD case entered under PatientID " + CStr(Me!FamilyTrustID) + "',#" + d + "#,'" + un + "','" + cn + "')"
            DoCmd.SetWarnings False
            DoCmd.RunSQL S
            DoCmd.SetWarnings True
            ' I think this next bit just refreshes the form. It depends what option 5 was on the previous list of command argument list, as shown in the Macro window in previous versions of Microsoft Access (count down the list, starting from 0).  taken from https://msdn.microsoft.com/en-us/vba/access-vba/articles/docmd-domenuitem-method-access and http://access.mvps.org/access/RunCommand/domenuitem.htm
            ' Maybe this this work (UNTESTED!)
            'DoCmd.RunCommand acCmdRefresh
            DoCmd.DoMenuItem acFormBar, acRecordsMenu, 5, , acMenuVer70
    
            Dim stDocName As String
            Dim stLinkCriteria As String
            
            stDocName = "FamilyResults_Auto_PGD_Report"
            'stLinkCriteria = "[dbo_Patient_Table].[PatientTrustID]=" & "'" & Me![PatientID] & "'"
            stLinkCriteria = "([dbo_Patient_Table].[PatientTrustID]=" & "'" & Me![PatientID] & "'" & " AND [ePCI1]=" & Me.[ePGDCycleID] & ") OR ([dbo_Patient_Table].[PatientTrustID]=" & "'" & Me![PatientID] & "'" & " AND [ePCI2]=" & Me.[ePGDCycleID] & ")"
            DoCmd.OpenReport stDocName, acViewPreview, , stLinkCriteria
            
        End If
End Sub

''email result to prenatal mailing list
Private Sub Command82_Click()

If Not IsNull(Me.ArrayResult) And (Me.StatusID = 4 Or Me.StatusID = 5) Then

    Dim un As String
    Dim iCfg As CDO.Configuration
    Dim iMsg As CDO.Message
    Dim emailto As String
    Dim subjectline As String
    Dim emailbody As String
    
    un = VBA.Environ("USERNAME")
    
    Set iCfg = New CDO.Configuration
    
    With iCfg
    '.Fields(cdoSMTPServer) = "sv-pr-ex33.gstt.local"  '<---this works but IT want me to use the smtp server instead
    '.Fields(cdoSMTPServer) = "smtp.gstt.local"       '<---old smtp that will go offline 10/04/2014
    .Fields(cdoSMTPServer) = "relay.gstt.local"        '<---new smtp
    .Fields(cdoSMTPServerPort) = 25 ' typically
    .Fields(cdoSendUsingMethod) = cdoSendUsingPort
    .Fields(cdoSMTPConnectionTimeout) = 200
    .Fields.update
    End With
    
    emailto = "Prenatal-array@gstt.nhs.uk;cytodutyscientist@gstt.nhs.uk"
    'emailto = "joowook.ahn@gstt.nhs.uk"
    'subjectline = "Moka alert: " & Me.Referral & " array result for " & Me!SpecimenType & " sample " & Me!SpecimenNo
    subjectline = Me.Referral & " result for specimen " & Me!SpecimenNo
    emailbody = "<font face='arial' size='3'><br /><br />" _
        & "ARRAY RESULT<br /><br /><br />" _
        & "Referral category: <b>" & Me!Referral & "</b><br /><br />" _
        & "PatientID: <b>" & Me!PatientID & "</b><br />" _
        & "Specimen: <b>" & Me!SpecimenNo & "</b><br />" _
        & "Name: <b>" & Me!Name & "</b><br />" _
        & "Result: <b>" & Me!ArrayResult & "</b><br /><br /><br /><br />" _
        & "Result checked by: <b>" & Me.Check2ID.Column(1) & "</b><br />" _
        & "Message sent by: <b>" & un & "</b><br /><br /><br /><br /></font>"
        '& "Specimen type: <b>" & Me!SpecimenType & "</b><br /><br />"
    
    Set iMsg = New CDO.Message
    With iMsg
    Set .Configuration = iCfg
    .From = """Moka Alerts"" <moka.alerts@gstt.nhs.uk>"
    .Sender = "moka.alerts@gstt.nhs.uk"
    .ReplyTo = "Prenatal-array@gstt.nhs.uk"
    .Subject = subjectline
    .HTMLBody = emailbody
    .To = emailto
    .BCC = "moka.alerts@gstt.nhs.uk"
    .Send
    End With
    
    Set iMsg = Nothing
    Set iCfg = Nothing
    
    MsgBox "Moka alert sent (will take a few minutes to arrive)", , "Don't be a dummy"
    
Else
    
    MsgBox "Array status not complete or no array result entered", , "Don't be a dummy"
    
    End If
    
End Sub


Private Sub HybPartFamily_Click()
On Error GoTo Err_HybPartFamily_Click
    'This function uses the arraytestid and internalpatientid to identify the hyb ids of the family members of the hyb partner
    Dim stDocName As String
    Dim stLinkCriteria As String
    ' Open the form s09_HybsPartnersFamilyMembers
    stDocName = "s09_HybsPartnersFamilyMembers"
    ' Filter the recordsource for this form using arraytestid and internalpatientid, where we're excluding this patient so we are only returning the hyb partner's family
    stLinkCriteria = "[ArrayTest_to_filter].[ArrayTestID]=" & Me![ArrayTestID] & " AND [s_HybIDs_minimum_info_to_filter].[InternalPatientID]<>" & Me!InternalPatientID
    ' open the form as a datasheet using the above values
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria

Exit_HybPartFamily_Click:
    Exit Sub

Err_HybPartFamily_Click:
    MsgBox Err.Description
    Resume Exit_HybPartFamily_Click
    
End Sub

Private Sub StatusID_BeforeUpdate(Cancel As Integer)
    'If user tries to update test status to complete, but report email hasn't been sent warn user and give option to cancel
    If Me.StatusID = 4 And IsNull(Me.ReportDate) Then
        If vbNo = MsgBox("It appears the report email for this case has not been sent. Are you sure you want to set status to Complete??", vbYesNo) Then
            'Cancel the status update
            Cancel = True
            Me.StatusID.Undo
            'Form requires refresh to sync with db, but this has to be done after the BeforeUpdate event, not during
            requires_refresh = True
        End If
    End If
End Sub

Private Sub StatusID_LostFocus()
    'If required, refresh the form to sync database changes
    If requires_refresh Then
        Me.refresh
        requires_refresh = False
    End If
End Sub
