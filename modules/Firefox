Option Compare Database

Public Function firefoxurl(url As String)
    Dim v As String
    'Use chrome on Windows 10 and Firefox on XP.
    'Initially set path of executable to chrome on Windows 10
    v = "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
    ' there are different locations for citrix vs cisco (FFS)
    ' therefore if the first path does not exist try a second location
    If Len(Dir(v)) = 0 Then
        v = "C:\Program Files\Google\Chrome\Application\chrome.exe"
    End If
    'On XP the path to chrome will not exist, so if it doesn't exist, change to firefox path on XP
    'Dir will return an empty string if the file doesn't exist, so if the length of the string is 0, use firefox instead
    If Len(Dir(v)) = 0 Then
        v = "C:\Program Files\Mozilla Firefox\firefox.exe"
    End If
    Set objShell = CreateObject("Wscript.Shell")
    'Surround path in quotes because contains spaces. Needs 4 quotes wither side to work.
    objShell.Run ("""" & v & """" & " -new-tab " & url)
End Function

Public Function chromeurl(url As String)
    Dim v As String
    v = """C:\Array\Software\Chrome\GoogleChromePortable.exe"""
    Set objShell = CreateObject("Wscript.Shell")
    objShell.Run (v & " -url " & url)
End Function

Public Function chromeurlserv(url As String)
    Dim v As String
    v = """F:\Moka\Files\Chrome\GoogleChromePortable.exe"""
    Set objShell = CreateObject("Wscript.Shell")
    objShell.Run (v & " -url " & url)
End Function
Public Function EscapeCharacters(unescaped_str)
    ' this function escapes apostrophes in strings, (such as names) to ensure the apostrophe doesn't affect any SQL statements
    ' use replace to convert single apostrophes to two apostrophes and return the escaped string
    EscapeCharacters = Replace(unescaped_str, "'", "''")
End Function
''concatenate function to bring values relating to a single ID together to be a single field, e.g. contatenating a patient's phenotype
''the function should be used in a TOTALS query, where output field 1 is the ID and grouped by, and output field 2 is an EXPRESSION and calls the function
''note that the Value must be an integer
Public Function Concater(Fieldx, Identity, Value, Source) As Variant
  Dim cnn As ADODB.Connection
  Dim rs As ADODB.Recordset
  Dim Sql As String
  Dim vFld As Variant
  
  Set cnn = CurrentProject.Connection
  Set rs = New ADODB.Recordset
  vFld = Null
  
  Sql = "SELECT [" & Fieldx & "] as Fld" & _
        " FROM [" & Source & "]" & _
        " WHERE [" & Identity & "]=" & Value
  
  ' open recordset.
  rs.Open Sql, cnn, adOpenForwardOnly, adLockReadOnly
  
  ' concatenate the field.
  Do While Not rs.EOF
    If Not IsNull(rs!Fld) Then
      vFld = vFld & ", " & rs!Fld
    End If
    rs.MoveNext
  Loop
  ' remove leading comma and space.
  vFld = Mid(vFld, 3)
  
  Set cnn = Nothing
  Set rs = Nothing
  
  ' return concatenated string.
  Concater = vFld
End Function

Public Function Lastworkday(MyDay As Date) As String
 
    Dim MyDate As Date
     
    If Weekday(MyDay) = 2 Then          'If MyDay is Monday
        MyDate = MyDay - 3              'Subtract 3 days
    ElseIf Weekday(MyDay) = 1 Then      'If MyDay is Sunday
        MyDate = MyDay - 2              'Subtract 2 days
    Else
        MyDate = MyDay - 1              'If any other day subtract 1 day
    End If
     
    Lastworkday = Format(MyDate, "dd/mm/yyyy")
     
End Function


